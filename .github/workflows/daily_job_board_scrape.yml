name: Daily Python Script

on:
  schedule:
    - cron: "0 7 * * *"
  workflow_dispatch:

jobs:
  run_script:
    name: Call Scrapy Script
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Scrapy Script
        id: run_scrapy
        run: |
          cd job_board_scraper
          echo "Running Scrapy Script..."
          python run_job_scraper.py > run_job_scraper.log 2>&1
          echo "Scrapy Script completed with status $?"
          cat run_job_scraper.log
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          HASHIDS_SALT: ${{ secrets.HASHIDS_SALT }}
          PAGES_TO_SCRAPE_QUERY: ${{ secrets.PAGES_TO_SCRAPE_QUERY }}
          PG_DATABASE: ${{ secrets.PG_DATABASE }}
          PG_HOST: ${{ secrets.PG_HOST }}
          PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
          PG_USER: ${{ secrets.PG_USER }}
          CHUNK_SIZE: ${{ secrets.CHUNK_SIZE }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}

      - name: Commit and Push Logs
        if: always()
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add job_board_scraper/run_job_scraper.log
          git commit -m "Add Scrapy script logs"
          git push
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Scrapy Logs
        uses: actions/upload-artifact@v3
        with:
          name: scrapy-logs
          path: job_board_scraper/run_job_scraper.log

  run_dbt:
    name: Run dbt
    needs: [run_script]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install dbt dependencies
        run: cd levergreen_dbt && dbt deps

      - name: Build dbt models
        run: cd levergreen_dbt && dbt run
        env:
          PG_DATABASE: ${{ secrets.PG_DATABASE }}
          PG_HOST: ${{ secrets.PG_HOST }}
          PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
          PG_USER: ${{ secrets.PG_USER }}
